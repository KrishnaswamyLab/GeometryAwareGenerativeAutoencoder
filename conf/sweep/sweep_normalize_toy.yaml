project: dmae
program: main.py
command:
  - /gpfs/gibbs/pi/krishnaswamy_smita/xingzhi/.conda_envs/geosink/bin/python
  - ${program}
  - ${args_no_hyphens}
method: grid  # or 'random', 'bayes'
metric:
  name: val_dist_accuracy
  goal: maximize
parameters:
  model.type:
    values: ['ae']
  model.lr:
    values: [1e-3]
  model.weight_decay:
    values: [1e-4]
  model.dropout:
    # values: [0.,0.2]
    values: [0.]
  model.batch_norm:
    values: [false]
  model.layer_widths:
    values: [[256,128,64]]
  model.dist_reconstr_weights:
    # values: [[0.,1.,0.]]
    values: [[0.5,0.5,0.]]
  model.use_dist_mse_decay:
    values: [true]
  model.dist_mse_decay:
    # values: [0,0.2]
    values: [0.2]
  model.cycle_weight:
    # values: [0.,1.]
    values: [0.]
  model.cycle_dist_weight:
    values: [0.]
  data.name:
    # values: ['swissroll0.1_phate','swissroll0.1_heatgeo','swissroll1.0_phate','swissroll1.0_heatgeo']
    # values: ['swissroll0.1_phate_flat', 'scurve0.1_phate_flat']
    # values: ['swissroll0.1_heatgeo']
    # values: ['hemisphere']
    values: ['swiss_roll_noise0.1_seed1', 's_curve_noise0.1_seed1', 'tree_noise0.1_seed1', 'swiss_roll_noise0.1_seed2', 's_curve_noise0.1_seed2', 'tree_noise0.1_seed2', 'swiss_roll_noise1.0_seed1', 's_curve_noise1.0_seed1', 'tree_noise1.0_seed1', 'swiss_roll_noise1.0_seed2', 's_curve_noise1.0_seed2', 'tree_noise1.0_seed2']
  training.match_potential:
    values: [True]
  # training.batch_size: 
  #   values: [256]
  # training.max_epochs: 
  #   values: [100000]
  # training.patience: 
  #   values: [10000]
  model.normalize:
    values: [true]
  model.normalize_dist:
    values: [true]
  model.componentwise_std:
    values: [false]
  data.preprocess:
    values: ['none']